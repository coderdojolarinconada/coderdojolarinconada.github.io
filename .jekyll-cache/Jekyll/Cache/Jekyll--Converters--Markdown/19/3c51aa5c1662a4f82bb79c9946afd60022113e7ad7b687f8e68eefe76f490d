I"4<p>Hola a todos, seguimos actualizando nuestro juego espacial que publicamos hace algunas semanas. Esta vez, vamos a aplicar una aceleraci√≥n al astronauta y programaremos el cambio de escenario mediante un evento.</p>

<p>Crearemos dos variables que indicar√°n la velocidad del eje X y del eje Y a las que llamaremos movX y movY respectivamente. Debemos tener en cuenta que las variables suelen nombrarse con la primera palabra en min√∫scula y la segunda palabra comienza por may√∫sculas(ejemplos: miPrograma, movX).</p>

<p><br />
<span style="display:block;text-align:center"><img src="/images/variables.png" alt="variables" /></span>
<br /></p>

<p>Una vez creadas nuestras variables, situamos al astronauta en el centro de la pantalla con el bloque de ir a x=0 e y=0. Inicializamos las variables movX y movY a 0 al inicio del juego y creamos un bucle que siempre est√© sumando al astronauta el valor de movX y el valor de movY.Por ello, si el valor de movX es igual a 2, sumar√≠a dos pasos positivamente a X, desplaz√°ndose hacia la derecha donde el valor se incrementa positivamente.</p>

<p><br />
<span style="display:block;text-align:center"><img src="/images/bloque1.png" alt="bloque1" /></span>
<br /></p>

<p>En el siguiente bloque crearemos los eventos que disparan el movimiento del astronauta. Al pulsar la flecha derecha, se incrementa la variable movX positivamente, movi√©ndose el astronauta por el eje de la X, sumando el valor a la posici√≥n x en la cuadr√≠cula. Si recordamos, el valor de x en el centro vale 0, al desplazarse a la derecho el valor se incrementa positivamente hasta 240. Si pulsamos la flecha izquierda ir√≠a restando el valor a la variable hasta ser negativa, momento en el cu√°l, el moviemiento de x es negativo y empieza a moverse hacia la izquierda, pudiendo llegar hasta -240.
Si pulsamos las flechas arriba y abajo, la acci√≥n que conseguimos con ello es igual a la que conseguimos pulsando las felchas derecha e izquierda, solo que el valor de y est√° entre 180 y -180. Del centro hacia la parte superior es positivo y desde el centro a la parte inferior de la pantalla es negativo.</p>

<p><br />
<span style="display:block;text-align:center"><img src="/images/bloque2.png" alt="bloque2" /></span>
<br /></p>

<p>En el siguiente introducimos un bloque por siempre y una condici√≥n. Esto representa la programci√≥n de un bloque que escucha permanentemente si el astronauta ha tocado el borde. Es como la alarma de nuestro despertador. Est√° comparando continuamente la hora actual del reloj con la grabada en la memoria de la alarma. En el momento que son iguales, el despertador suena. Aunque en este caso, lo que hace es enviar un mensaje para el cambio del escenario.</p>

<p><br />
<span style="display:block;text-align:center"><img src="/images/bloque3.png" alt="bloque3" /></span>
<br /></p>

<p>El siguiente bloque lo creamos en la programaci√≥n del escenario. Cuando recibe el mensaje, cambiamos el fondo del escenario y aparece el escenario llamado ‚Äúperder‚Äù. Tras ello, detenemos todos los objetos del programa terminando su ejecuci√≥n</p>

<p><br />
<span style="display:block;text-align:center"><img src="/images/bloque4.png" alt="bloque4" /></span>
<br /></p>

<p>Os dejo el video de nuestro canal y el enlace al programa de Sratch</p>

<p><a href="https://scratch.mit.edu/projects/395841606/" target="_blank">Star Wars</a> y <a href="https://scratch.mit.edu/projects/395710836/" target="_blank">Titanic</a>.</p>

<p>Y a una p√°gina donde ten√©is muchas partituras entre las que elegir <a href="https://tomapartituras.wordpress.com/" target="_blank">Toma partituras</a></p>

:ET